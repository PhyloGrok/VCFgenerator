#!/bin/bash

#Potential Code Block 1

## Set directories 

mkdir ../../media/volume/sdb/sra/pH/fastq/SAM
mkdir ../../media/volume/sdb/sra/pH/fastq/BAM
mkdir ../../media/volume/sdb/sra/pH/fastq/BCF
mkdir ../../media/volume/sdb/sra/pH/fastq/VCF
mkdir ../../media/volume/sdb/sra/pH/ref_genome

## NIH API Websearch
esearch -db sra -query "PRJNA541441" | efetch -format docsum | xtract -pattern Runs -ACC @acc  -element "&ACC" > ../../media/volume/sdb/sra/pH/pH.txt

# change "PRJNA541441" to a user input prompt  
# ph will be changed to project name for the users search

## Grab metadata using the esearch list 
prefetch --option-file pH.txt -O ../../media/volume/sdb/sra/pH/

# ph will be changed to project name for the users search

## takes list generated by esearch to grab the desired fastq files from the databases
fasterq-dump --outdir ../../media/volume/sdb/sra/pH/fastq/ ../../media/volume/sdb/sra/pH/SRR*

# ph will be changed to project name for the users search
# output = ../../media/volume/sdb/sra/pH/fastq/
# input = ../../media/volume/sdb/sra/pH/SRR*

## gzip all fastq files that were collected 
gzip *.fastq
#reduces storage cost of all collected fastq files by making them zip files 

#### Possible Loop for Trimmomatic 

for infile in ../../media/volume/sdb/sra/pH/fastq/*_1.fastq.gz 
do 
base=$(basename ${infile} _1.fastq.gz) \ 
trimmomatic PE ../../media/volume/sdb/sra/pH/fastq/${infile} ../../media/volume/sdb/sra/pH/fastq/${base}_2.fastq.gz \
../../media/volume/sdb/sra/pH/fastq/${base}_1.trim.fastq.gz ../../media/volume/sdb/sra/pH/fastq/${base}_1.untrim.fastq.gz \
../../media/volume/sdb/sra/pH/fastq/${base}_2.trim.fastq.gz ../../media/volume/sdb/sra/pH/fastq/${base}_2.untrim.fastq.gz \
SLIDINGWINDOW:4:20 MINLEN:25 ILLUMINACLIP:../../media/volume/sdb/sra/pH/fastq/NexteraPE-PE.fa:2:40:15
done

#### Loop ends 

## need to run fastqc on trimmed files only 
fastqc ../../media/volume/sdb/sra/pH/fastq/*.trim.fastq.gz


## Set your Genome index
bwa index ../../media/volume/sdb/sra/pH/


#### VCF generation Loop 


for infile in *_1.fastq.gz
do
base=$(basename ${infile} _1.fastq.gz)

#Create aligned sam files 

bwa mem ref_genome.fasta ../../media/volume/sdb/sra/pH/fastq/${base}_1.trim.fastq.gz \
../../media/volume/sdb/sra/pH/fastq/${base}_2.trim.fastq.gz > ../../media/volume/sdb/sra/pH/fastq/SAM${base}.aligned.sam

#Creating and sorting BAM Files 

samtools view -S -b ../../media/volume/sdb/sra/pH/fastq/SAM${base}.aligned.sam > ../../media/volume/sdb/sra/pH/fastq/BAM${base}.aligned.bam

samtools sort -o ../../media/volume/sdb/sra/pH/fastq/BAM${base}.aligned.sorted.bam ../../media/volume/sdb/sra/pH/fastq/BAM${base}.aligned.bam

bcftools mpileup -O b -o ../../media/volume/sdb/sra/pH/fastq/BCF/${base}_raw.bcf \
-f ../../media/volume/sdb/sra/pH/ref_genome/${base}.fasta ../../media/volume/sdb/sra/pH/fastq/BAM${base}.aligned.sorted.bam


done
